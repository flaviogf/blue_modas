// <auto-generated />
using System;
using BlueModas.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlueModas.Api.Database.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200606100649_v2__Create_Table_Orders")]
    partial class v2__Create_Table_Orders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BlueModas.Api.Models.Order", b =>
                {
                    b.Property<Guid>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Number");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BlueModas.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BlueModas.Api.Models.Order", b =>
                {
                    b.OwnsOne("BlueModas.Api.Models.Customer", "Customer", b1 =>
                        {
                            b1.Property<Guid>("OrderNumber")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Email")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("Name")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("Phone")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.HasKey("OrderNumber");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderNumber");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
